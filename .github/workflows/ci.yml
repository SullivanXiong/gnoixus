name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm test -- --coverage
    
    - name: Build extension
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '20.x'
      with:
        name: dist
        path: dist/
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: matrix.node-version == '20.x'
      with:
        files: ./coverage/lcov.info
        fail_ci_if_error: false

  build-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build extension
      run: npm run build
    
    - name: Package Chrome/Edge version
      run: |
        cd dist
        zip -r ../gnoixus-chrome-${{ github.ref_name }}.zip .
        cd ..
    
    - name: Package Firefox version
      run: |
        cp manifest.v2.json dist/manifest.json
        cd dist
        zip -r ../gnoixus-firefox-${{ github.ref_name }}.xpi .
        cd ..
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          gnoixus-chrome-*.zip
          gnoixus-firefox-*.xpi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
